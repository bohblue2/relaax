#!/usr/bin/env python

from __future__ import print_function

import numpy as np
import relaax.client.rlx_client


class ContEnv(object):
    STATE_SIZE = 4
    ACTION_SIZE = 4

    def __init__(self):
        self._state = None
        self._limit = 200
        self._step = 0
        self._epsilon = 1e-1

    def act(self, act):
        rewards, terminal = 1, False

        for i in range(0, ContEnv.ACTION_SIZE):
            # part = sum(self._state[i*6:(i+1)*6]) / 6
            # if abs(act[i] - part) < self._epsilon:
            rewards -= (act[i] - self._state[i])**2

        self._step += 1
        if self._step == self._limit:
            terminal = True
            self._step = 0

        return rewards, terminal

    def state(self):
        self._state = np.random.rand(ContEnv.STATE_SIZE)
        return self._state

if __name__ == "__main__":
    env = ContEnv()

    client = relaax.client.rlx_client.Client('localhost:7001')  # connect to RLX server
    action = client.init(env.state())
    while True:
        reward, reset = env.act(action)
        if reset:
            episode_score = client.reset(reward)
            action = client.send(None, env.state())
        else:
            action = client.send(reward, env.state())
